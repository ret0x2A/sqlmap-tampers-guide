'''
–¢–∞–º–ø–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∏–π —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–π –∏–Ω—ä–µ–∫—Ü–∏–∏ –≤ TG
'''

from lib.core.data import kb
from lib.core.enums import PRIORITY
from lib.core.common import singleTimeWarnMessage
import urllib.parse
import urllib.request
import os

__priority__ = PRIORITY.LOW

count_sended = len(kb.injections or [])

"""
–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Linux / macOS
export BOT_TOKEN="1234567890:YOUR_BOT_TOKEN"
export CHAT_ID="123456789"

Windows (PowerShell):
setx BOT_TOKEN "1234567890:YOUR_BOT_TOKEN"
setx CHAT_ID "123456789"
"""

BOT_TOKEN = os.getenv("BOT_TOKEN")
CHAT_ID = os.getenv("CHAT_ID")

def dependencies():
    singleTimeWarnMessage('This tamper script demonstrates how to send notifications to Telegram when sqlmap detects an injection. For more details, visit the repository: https://github.com/ret0x2A/sqlmap-tampers-guide/')

def send_to_telegram(message: str):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º"""
    try:
        base_url = f"https://api.telegram.org/bot{BOT_TOKEN}/sendMessage"
        params = {
            "chat_id": CHAT_ID,
            "text": message
        }
        url = f"{base_url}?{urllib.parse.urlencode(params)}"
        urllib.request.urlopen(url, timeout=5)
    except Exception as e:
        print(f"[!] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")

def tamper(payload, **kwargs):
    global count_sended

    ''' 
    –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ, –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    '''
    if (kb.requestCounter < 5):
        return payload

    injections_count = len(kb.injections)
    if injections_count and count_sended < injections_count:
        injection_info = kb.injections[count_sended]
        vuln_hosts = kb.vulnHosts

        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        msg = f"üö® SQLi –Ω–∞–π–¥–µ–Ω–∞!\n\n" \
              f"‚û°Ô∏è Host: {', '.join(vuln_hosts) if vuln_hosts else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}\n" \
              f"‚û°Ô∏è Place: {injection_info.get('place')}\n" \
              f"‚û°Ô∏è Parameter: {injection_info.get('parameter')}\n" \
              f"‚û°Ô∏è Payload: {injection_info['data'][6]['payload'] if 6 in injection_info['data'] else '---'}"

        # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å
        print(msg)

        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
        send_to_telegram(msg)

        count_sended += 1

    return payload
